
import telebot
from telebot import types
import json

class zakaz(object):
    """description of class"""

    def __init__(self,type_t):
        """Constructor"""
        self.type_t = type_t
        self.value = 0
        self.phon_num = ""
        self.name=""
        pass
    def a_type(self,aType):
        self.type_t.append(aType)
    def set_value(self,val):
        self.value = val
    def set_phon_num(self,phone):
        self.phon_num = phone
    def set_name(self,name):
        self.name = name
    def get_type(self):
        return self.type_t
    def get_value(self):
        return self.value


tulpis_type = [ "üü©–ó–µ–ª–µ–Ω—ã–µ", "üü®–ñ–µ–ª—Ç—ã–µ", "üå∑–ö—Ä–∞—Å–Ω—ã–µ" ]
reply = "980196074"


bot = telebot.TeleBot("1460673027:AAHLVICOyeZl5t9UMutco2kcygD0xlEnoe4", parse_mode=None)
menu = types.ReplyKeyboardMarkup(row_width=2,resize_keyboard=True)
empty_key = types.ReplyKeyboardMarkup(row_width=2,resize_keyboard=True)
menu.add('–°–æ–±—Ä–∞—Ç—å –∑–∞–∫–∞–∑')
menu.add('/help')

#itembtn1 = types.KeyboardButton('–°–æ–±—Ä–∞—Ç—å –∑–∞–∫–∞–∑')


@bot.message_handler(commands=['start'])
def send_welcome(message):
	#bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑ —Ç—é–ª—å–ø–∞–Ω–æ–≤!")
	bot.send_message(message.chat.id,"–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑ —Ç—é–ª—å–ø–∞–Ω–æ–≤!",reply_markup=menu)
@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    if message.text == "–°–æ–±—Ä–∞—Ç—å –∑–∞–∫–∞–∑":
        markup = types.ReplyKeyboardMarkup(row_width=2,resize_keyboard=True)
        
        for n in tulpis_type:
            markup.add(n)
        markup.add("–•–æ—á—É –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ü–≤–µ—Ç–æ–≤!")
        order = zakaz(list())
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ —Ü–≤–µ—Ç!", reply_markup=markup)
        bot.register_next_step_handler(message,choo_color,order)
    elif message.text == "/help":
        bot.send_message(message.from_user.id, "–ù–∞–ø–∏—à–∏ –ø—Ä–∏–≤–µ—Ç")
    else:
         bot.send_message(message.from_user.id, "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é. –ù–∞–ø–∏—à–∏ /help.")


def choo_color(message,order):
    text = message.text
    if text == "–•–æ—á—É –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ü–≤–µ—Ç–æ–≤!":
        color = types.ReplyKeyboardMarkup(row_width=2,resize_keyboard=True)
        for n in tulpis_type:
            color.add(n)
        color.add('–ó–∞–∫–æ–Ω—á–∏—Ç—å')
        bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ —Ü–≤–µ—Ç–∞:",reply_markup=color)
        bot.register_next_step_handler(message,multicolor,order)
    else:
        bot.send_message(message.from_user.id, "–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:")
        order.a_type(text)
        bot.register_next_step_handler(message,set_value,order)


        
def multicolor(message,order):
    text = message.text
    if text == '–ó–∞–∫–æ–Ω—á–∏—Ç—å':
        bot.send_message(message.from_user.id, "–í—ã–±—Ä–∞–Ω–Ω—ã–µ —Ü–≤–µ—Ç–∞: " +str(order.get_type()))
        bot.send_message(message.from_user.id, "–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:",reply_markup=empty_key)
        bot.register_next_step_handler(message,set_value,order)
    else:
        order.a_type(text)
        bot.send_message(message.from_user.id, "–í—ã–±—Ä–∞–Ω–Ω—ã–µ —Ü–≤–µ—Ç–∞: " +str(order.get_type()))
        bot.register_next_step_handler(message,multicolor,order)

def set_value(message,order):

    text = message.text
    if not text.isdigit():
        msg = bot.send_message(message.chat.id, '–û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º, –≤–≤–µ–¥–∏—Ç–µ –µ—â—ë —Ä–∞–∑.')
        bot.register_next_step_handler(msg, set_value,order) #askSource
    order.set_value(text)
    bot.send_message(message.chat.id,'–£–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–º—è:')
    bot.register_next_step_handler(message, set_name,order)

def set_name(message,order):
    text = message.text
    order.set_name(text)
    bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏ —Å –≤–∞–º–∏:')
    bot.register_next_step_handler(message, set_phon,order)

    

def set_phon(message,order):
    text = message.text
    order.set_phon_num(text)
    bot.send_message(reply,"–ù–æ–≤—ã–π –∑–∞–∫–∞–∑.\n–î–µ—Ç–∞–ª–∏: –í—ã–±—Ä–∞–Ω–Ω—ã–µ —Ü–≤–µ—Ç–∞" + str(order.get_type()) + "\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: "+str(order.get_value())+"\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: "+ str(order.phon_num)+"\n–ò–º—è: "+ str(order.name))
    bot.send_message(message.chat.id,'–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω! –î–µ—Ç–∞–ª–∏: –í—ã–±—Ä–∞–Ω–Ω—ã–µ —Ü–≤–µ—Ç–∞' + str(order.get_type()) + " –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: "+str(order.get_value()) +" –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: "+ str(order.phon_num))
bot.polling(none_stop=True, interval=0)